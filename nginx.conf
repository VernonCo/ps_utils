user www-data;
worker_processes auto;
pid /run/nginx.pid;
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}
http { ##
    # Logging Settings
    ##
    log_format logfrmt 'NGINX $server_name - $remote_user [$time_local] "$request" $status  "$http_referer"';

    access_log /dev/stdout logfrmt;
    error_log /dev/stdout;
    ##
    # Basic Settings
    ##
    # hide headers
    #more_clear_headers      'Server';
    #more_clear_headers      'X-Powered-By';

    include /etc/nginx/mime.types;

    ## Size Limits
    #client_body_buffer_size   8k;
    #client_header_buffer_size 1k;
    client_max_body_size      1500m;
    #large_client_header_buffers 4 4k/8k;

    # Timeouts, do not keep connections open longer then necessary to reduce
    # resource usage and deny Slowloris type attacks.
    client_body_timeout      5s; # maximum time between packets the client can pause when sending nginx any data
    client_header_timeout    5s; # maximum time the client has to send the entire header to nginx
    keepalive_timeout       75s; # timeout which a single keep-alive client connection will stay open
    send_timeout            9s; # maximum time between packets nginx is allowed to pause when sending the client data

    ## General Options
    #aio                       on;  # asynchronous file I/O, fast with ZFS, make sure sendfile=off
#        charset                   utf-8; # adds the line "Content-Type" into response-header, same as "source_charset"
    default_type              application/octet-stream;
    gzip                      off; # disable on the fly gzip compression due to higher latency, only use gzip_static
    #gzip_http_version         1.0; # serve gzipped content to all clients including HTTP/1.0
    gzip_static               on;  # precompress content (gzip -1) with an external script
    #gzip_vary                 on;  # send response header "Vary: Accept-Encoding"         gzip_proxied             any;  # allows compressed responses for any request even from proxies
    ignore_invalid_headers    on;
    keepalive_requests        50;  # number of requests per connection, does not affect SPDY
    keepalive_disable         none; # allow all browsers to use keepalive connections
    max_ranges                1; # allow a single range header for resumed downloads and to stop large range header DoS attacks
    msie_padding              off;
    open_file_cache           max=1000 inactive=2h;
    open_file_cache_errors    on;
    open_file_cache_min_uses  1;
    open_file_cache_valid     1h;
    output_buffers            1 512;
    postpone_output           1460;   # postpone sends to match our machine's MSS
    read_ahead                512K;   # kernel read head set to the output_buffers
    recursive_error_pages     on;
    reset_timedout_connection on;  # reset timed out connections freeing ram
    server_tokens             off; # version number in error pages
    server_name_in_redirect   off; # if off, nginx will use the requested Host header
    #  source_charset            utf-8; # same value as "charset"
    tcp_nodelay               on; # Nagle buffering algorithm, used for keepalive only
    ## Request limits
    limit_req_zone  $binary_remote_addr  zone=gulag:10m   rate=250r/m;

   # set an array of temp and cache file option that will otherwise default to
    # restricted locations accessible only to root.
    client_body_temp_path /tmp/client_body;
    # fastcgi_temp_path /tmp/fastcgi_temp;
    # scgi_temp_path /tmp/scgi_temp;
    # uwsgi_temp_path /tmp/uwsgi_temp;

    proxy_cache_path /tmp/cache levels=1:2 keys_zone=one:10m inactive=1d max_size=2000m;
    proxy_temp_path /tmp;
    proxy_max_temp_file_size        0;
    proxy_connect_timeout           900;
    proxy_send_timeout              900;
    proxy_read_timeout              900;
    proxy_buffer_size               4k;
    proxy_buffers                   4 32k;
    proxy_busy_buffers_size         64k;
    proxy_temp_file_write_size      64k;
    proxy_intercept_errors          on;

    upstream backend {
        server 127.0.0.1:9000;
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  localhost;

        #proxy_cache one;  #cache for static files
        proxy_cache_key $scheme$host$request_uri;
        proxy_cache_valid  200 301 302 304 120m;
        proxy_cache_valid  any 1m;

        client_max_body_size 1500M;

        add_header  X-Frame-Options "SAMEORIGIN";
        #limit_req   zone=gulag  burst=1000 nodelay;

        # pass header on to production server
        proxy_redirect          off;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_read_timeout  	90;


        # Force the latest IE version
        add_header "X-UA-Compatible" "IE=Edge";

        # Prevent clients from accessing hidden files (starting with a dot)
        # This is particularly important if you store .htpasswd files in the site hierarchy
        # Access to `/.well-known/` is allowed.
        # https://www.mnot.net/blog/2010/04/07/well-known
        # https://tools.ietf.org/html/rfc5785
        location ~* /\.(?!well-known\/) {
            deny all;
        }

        # Prevent clients from accessing to backup/config/source files
        location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
            deny all;
        }
        location / {
            #disables cache for all others not in common_params.conf
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            add_header Cache-Control "private";
            add_header Cache-Control "no-store";
            access_log off;
            proxy_pass http://backend;
        }
        location ^~ /static {
            add_header Cache-Control "public";
            root /app/app/;
            sendfile   on;
            tcp_nopush on;
            sendfile_max_chunk 1m;
            expires 1d;
        }
        location /favicon.ico {
            add_header Cache-Control "public";
            root /app/app/static/;
            sendfile   on;
            tcp_nopush on;
            expires 30d;
        }
    }
}
